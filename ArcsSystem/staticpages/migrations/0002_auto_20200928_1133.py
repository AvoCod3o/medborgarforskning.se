# Generated by Django 2.2.16 on 2020-09-28 11:33

from django.db import migrations, models
import django.db.models.deletion
import modelcluster.contrib.taggit
import modelcluster.fields
import wagtail.core.blocks
import wagtail.core.fields


class Migration(migrations.Migration):

    dependencies = [
        ('wagtailimages', '0022_uploadedimage'),
        ('wagtailcore', '0046_auto_20200928_1133'),
        ('taggit', '0003_taggeditem_add_unique_index'),
        ('staticpages', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AdditionalResourcesPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('additional_resources_body', wagtail.core.fields.StreamField([('title', wagtail.core.blocks.CharBlock(classname='full title')), ('content', wagtail.core.blocks.RichTextBlock())])),
                ('additional_resources_body_en', wagtail.core.fields.StreamField([('title', wagtail.core.blocks.CharBlock(classname='full title')), ('content', wagtail.core.blocks.RichTextBlock())], null=True)),
                ('additional_resources_body_sv', wagtail.core.fields.StreamField([('title', wagtail.core.blocks.CharBlock(classname='full title')), ('content', wagtail.core.blocks.RichTextBlock())], null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='CaseStudiesPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('case_studies_body', wagtail.core.fields.StreamField([('title', wagtail.core.blocks.CharBlock(classname='full title')), ('content', wagtail.core.blocks.RichTextBlock())])),
                ('case_studies_body_en', wagtail.core.fields.StreamField([('title', wagtail.core.blocks.CharBlock(classname='full title')), ('content', wagtail.core.blocks.RichTextBlock())], null=True)),
                ('case_studies_body_sv', wagtail.core.fields.StreamField([('title', wagtail.core.blocks.CharBlock(classname='full title')), ('content', wagtail.core.blocks.RichTextBlock())], null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='CitizenSciencePage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('citizen_science_menu_title', models.CharField(default='Getting started with Citizen Science', max_length=100)),
                ('citizen_science_menu_title_en', models.CharField(default='Getting started with Citizen Science', max_length=100, null=True)),
                ('citizen_science_menu_title_sv', models.CharField(default='Getting started with Citizen Science', max_length=100, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='FAQPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('faq_body', wagtail.core.fields.StreamField([('title', wagtail.core.blocks.CharBlock(classname='full title')), ('content', wagtail.core.blocks.RichTextBlock())])),
                ('faq_body_en', wagtail.core.fields.StreamField([('title', wagtail.core.blocks.CharBlock(classname='full title')), ('content', wagtail.core.blocks.RichTextBlock())], null=True)),
                ('faq_body_sv', wagtail.core.fields.StreamField([('title', wagtail.core.blocks.CharBlock(classname='full title')), ('content', wagtail.core.blocks.RichTextBlock())], null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='PressPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('press_title', models.CharField(default='title', max_length=100)),
                ('press_title_en', models.CharField(default='title', max_length=100, null=True)),
                ('press_title_sv', models.CharField(default='title', max_length=100, null=True)),
                ('contact_Email', models.EmailField(max_length=254)),
                ('pressPublishedDate', models.DateField(verbose_name='Post date')),
                ('press_body', wagtail.core.fields.StreamField([('title', wagtail.core.blocks.CharBlock(classname='full title')), ('content', wagtail.core.blocks.RichTextBlock())])),
                ('press_body_en', wagtail.core.fields.StreamField([('title', wagtail.core.blocks.CharBlock(classname='full title')), ('content', wagtail.core.blocks.RichTextBlock())], null=True)),
                ('press_body_sv', wagtail.core.fields.StreamField([('title', wagtail.core.blocks.CharBlock(classname='full title')), ('content', wagtail.core.blocks.RichTextBlock())], null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='PrivacyPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('privacy_title', models.CharField(default='title', max_length=100)),
                ('privacy_title_en', models.CharField(default='title', max_length=100, null=True)),
                ('privacy_title_sv', models.CharField(default='title', max_length=100, null=True)),
                ('privacy_content', wagtail.core.fields.RichTextField()),
                ('privacy_content_en', wagtail.core.fields.RichTextField(null=True)),
                ('privacy_content_sv', wagtail.core.fields.RichTextField(null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='SourcecodePage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('sourcecode_title', models.CharField(default='Source Code', max_length=100)),
                ('sourcecode_title_en', models.CharField(default='Source Code', max_length=100, null=True)),
                ('sourcecode_title_sv', models.CharField(default='Source Code', max_length=100, null=True)),
                ('sourcecode_content', wagtail.core.fields.RichTextField()),
                ('sourcecode_content_en', wagtail.core.fields.RichTextField(null=True)),
                ('sourcecode_content_sv', wagtail.core.fields.RichTextField(null=True)),
                ('repository', models.URLField()),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='SwedishCitizenSciencePage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('swedish_citizen_science_body', wagtail.core.fields.StreamField([('title', wagtail.core.blocks.CharBlock(classname='full title')), ('content', wagtail.core.blocks.RichTextBlock())])),
                ('swedish_citizen_science_body_en', wagtail.core.fields.StreamField([('title', wagtail.core.blocks.CharBlock(classname='full title')), ('content', wagtail.core.blocks.RichTextBlock())], null=True)),
                ('swedish_citizen_science_body_sv', wagtail.core.fields.StreamField([('title', wagtail.core.blocks.CharBlock(classname='full title')), ('content', wagtail.core.blocks.RichTextBlock())], null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='TermsPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('terms_title', models.CharField(default='title', max_length=100)),
                ('terms_title_en', models.CharField(default='title', max_length=100, null=True)),
                ('terms_title_sv', models.CharField(default='title', max_length=100, null=True)),
                ('version_number', models.CharField(default='v01', max_length=100)),
                ('terms_content', wagtail.core.fields.RichTextField()),
                ('terms_content_en', wagtail.core.fields.RichTextField(null=True)),
                ('terms_content_sv', wagtail.core.fields.RichTextField(null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='WhatsCitizenSciencePage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('citizen_science_body', wagtail.core.fields.StreamField([('title', wagtail.core.blocks.CharBlock(classname='full title')), ('content', wagtail.core.blocks.RichTextBlock())])),
                ('citizen_science_body_en', wagtail.core.fields.StreamField([('title', wagtail.core.blocks.CharBlock(classname='full title')), ('content', wagtail.core.blocks.RichTextBlock())], null=True)),
                ('citizen_science_body_sv', wagtail.core.fields.StreamField([('title', wagtail.core.blocks.CharBlock(classname='full title')), ('content', wagtail.core.blocks.RichTextBlock())], null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='PressPageTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_object', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='tagged_items', to='staticpages.PressPage')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='staticpages_presspagetag_items', to='taggit.Tag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='presspage',
            name='pressTags',
            field=modelcluster.contrib.taggit.ClusterTaggableManager(blank=True, help_text='A comma-separated list of tags.', through='staticpages.PressPageTag', to='taggit.Tag', verbose_name='Tags'),
        ),
        migrations.CreateModel(
            name='HomePage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('welcome_body', wagtail.core.fields.StreamField([('title', wagtail.core.blocks.CharBlock(classname='full title', default='Welcome')), ('content', wagtail.core.blocks.RichTextBlock())])),
                ('welcome_body_en', wagtail.core.fields.StreamField([('title', wagtail.core.blocks.CharBlock(classname='full title', default='Welcome')), ('content', wagtail.core.blocks.RichTextBlock())], null=True)),
                ('welcome_body_sv', wagtail.core.fields.StreamField([('title', wagtail.core.blocks.CharBlock(classname='full title', default='Welcome')), ('content', wagtail.core.blocks.RichTextBlock())], null=True)),
                ('project_body', wagtail.core.fields.StreamField([('title', wagtail.core.blocks.CharBlock(classname='full title', default='Projects')), ('content', wagtail.core.blocks.RichTextBlock())])),
                ('project_body_en', wagtail.core.fields.StreamField([('title', wagtail.core.blocks.CharBlock(classname='full title', default='Projects')), ('content', wagtail.core.blocks.RichTextBlock())], null=True)),
                ('project_body_sv', wagtail.core.fields.StreamField([('title', wagtail.core.blocks.CharBlock(classname='full title', default='Projects')), ('content', wagtail.core.blocks.RichTextBlock())], null=True)),
                ('get_CitSciSE_box', wagtail.core.fields.StreamField([('title', wagtail.core.blocks.CharBlock(classname='full title', default='Get involved with CitSciSE')), ('content', wagtail.core.blocks.RichTextBlock())])),
                ('get_CitSciSE_box_en', wagtail.core.fields.StreamField([('title', wagtail.core.blocks.CharBlock(classname='full title', default='Get involved with CitSciSE')), ('content', wagtail.core.blocks.RichTextBlock())], null=True)),
                ('get_CitSciSE_box_sv', wagtail.core.fields.StreamField([('title', wagtail.core.blocks.CharBlock(classname='full title', default='Get involved with CitSciSE')), ('content', wagtail.core.blocks.RichTextBlock())], null=True)),
                ('data_box', wagtail.core.fields.StreamField([('title', wagtail.core.blocks.CharBlock(classname='full title', default='Data Quality')), ('subtitle', wagtail.core.blocks.CharBlock(classname='full title', default='Getting Started')), ('content', wagtail.core.blocks.RichTextBlock())])),
                ('data_box_en', wagtail.core.fields.StreamField([('title', wagtail.core.blocks.CharBlock(classname='full title', default='Data Quality')), ('subtitle', wagtail.core.blocks.CharBlock(classname='full title', default='Getting Started')), ('content', wagtail.core.blocks.RichTextBlock())], null=True)),
                ('data_box_sv', wagtail.core.fields.StreamField([('title', wagtail.core.blocks.CharBlock(classname='full title', default='Data Quality')), ('subtitle', wagtail.core.blocks.CharBlock(classname='full title', default='Getting Started')), ('content', wagtail.core.blocks.RichTextBlock())], null=True)),
                ('paper_box', wagtail.core.fields.StreamField([('title', wagtail.core.blocks.CharBlock(classname='full title', default='Papers')), ('subtitle', wagtail.core.blocks.CharBlock(classname='full title', default='Recent papers'))])),
                ('paper_box_en', wagtail.core.fields.StreamField([('title', wagtail.core.blocks.CharBlock(classname='full title', default='Papers')), ('subtitle', wagtail.core.blocks.CharBlock(classname='full title', default='Recent papers'))], null=True)),
                ('paper_box_sv', wagtail.core.fields.StreamField([('title', wagtail.core.blocks.CharBlock(classname='full title', default='Papers')), ('subtitle', wagtail.core.blocks.CharBlock(classname='full title', default='Recent papers'))], null=True)),
                ('CitSciSE_box', wagtail.core.fields.StreamField([('title', wagtail.core.blocks.CharBlock(classname='full title', default='CitSciSE Community')), ('subtitle', wagtail.core.blocks.CharBlock(classname='full title', default='Recent Blog Posts'))])),
                ('CitSciSE_box_en', wagtail.core.fields.StreamField([('title', wagtail.core.blocks.CharBlock(classname='full title', default='CitSciSE Community')), ('subtitle', wagtail.core.blocks.CharBlock(classname='full title', default='Recent Blog Posts'))], null=True)),
                ('CitSciSE_box_sv', wagtail.core.fields.StreamField([('title', wagtail.core.blocks.CharBlock(classname='full title', default='CitSciSE Community')), ('subtitle', wagtail.core.blocks.CharBlock(classname='full title', default='Recent Blog Posts'))], null=True)),
                ('welcome_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='welcomeImage', to='wagtailimages.Image')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
    ]
