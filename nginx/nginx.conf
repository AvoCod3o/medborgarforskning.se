#
# File Name: nginx.conf
# Description: configure nginx within the docker container. Setup as a reverse proxy.
# Author: Jonathan Brier & Christopher Kullenberg
# Inspired by https://github.com/benoitc/gunicorn/blob/master/examples/nginx.conf
#
# nginx 1.17.7, intermediate config, OpenSSL 1.1.1d
# Supports Firefox 27, Android 4.4.2, Chrome 31, Edge, IE 11 on Windows 7, Java 8u31, OpenSSL 1.0.1, Opera 20, and Safari 9
# For configuration recommendations and generator - https://wiki.mozilla.org/Security/Server_Side_TLS
# Check SSL configuration against best practices at https://observatory.mozilla.org/

# TODO implement WAF - ModSecurity with OWASP CRS see: https://github.com/SpiderLabs/ModSecurity-nginx and https://github.com/SpiderLabs/owasp-modsecurity-crs
# TODO implement proxy_caching - https://docs.nginx.com/nginx/admin-guide/content-cache/content-caching/
# TODO check header config for security - https://securityheaders.com/
# TODO move settings that may vary per instance to included file for customization, readability, and more modular design

### Documentation: https://nginx.org/en/docs/ngx_core_module.html#worker_processes
worker_processes 1; #Default value is "worker_processes 1;", but try auto or the to number of cpus to start

user nobody nogroup;

pid /var/run/nginx.pid;

### TODO uncomment to enable WAF ModSecurity - additional bulid probably needed ###
# load_module modules/ngx_http_modsecurity_module.so;

events {
  worker_connections 1024; # increase if you have lots of clients
  accept_mutex off; # set to 'on' if nginx worker_processes > 1
}

http {
  include mime.types;

  default_type text/html;

  upstream django-server {
    ### Configuring a way for more than one server hosting the app default is 1, but more can be set for load balancing https://docs.nginx.com/nginx/admin-guide/load-balancer/http-load-balancer/
    server djangoapp-app:8000 fail_timeout=0;

    ### for UNIX domain socket setups
    #server unix:/tmp/gunicorn.sock fail_timeout=0;
  }

  ### Drop any unknown hosts
  server {
    ### if no Host match, close the connection to prevent host spoofing
    listen 80 default_server;
    listen [::]:80 default_server;

    ### if no Host match on 443, close the connection to prevent host spoofing
    #listen 443 default_server;
    #listen [::]:443 default_server
    #ssl on;
    #ssl_certificate /path/to/certificate.crt; # TODO generate self signed certificate
    #ssl_certificate_key /path/to/certificate.key;

    return 444; # don't return response for anything unless a valid host
    }

  ### Redirect all incoming http requests to the same site and URI on https, using nginx - .well-known allows lets-encrypt to verify via a generated file
  server {
    listen 80 deferred; # ipv4 listening for upgrade to https redirect
    listen [::]:80 deferred; # ipv6 listening for upgrade to https redirect

    server_name arcstest.brierjon.com medborgarforskning.se www.medborgarforskning.se dev.medborgarforskning.se;

    ### set the .well-known location for letsencrypt ACME Challege file
    location = /.well-known/acme-challege {
      alias /var/www/certbot;
      #sendfile on;
      #sendfile_max_chunk 1m;
    }

    return 301 https://$host$request_uri;
  }


  ### Specific configuration of Nginx for serving the docker based ArcsSystem app
  server {
     ### set the level of error logging - [ debug | info | notice | warn | error | crit | alert | emerg]
     error_log  /var/log/nginx/error.log warn;

     ### set access logging
     access_log /var/log/nginx/access.log combined;

     ##### Begin SSL configuration ##### enable this block after server has an ssl certificate
     ## listen 443 ssl http2; # TODO only enable after django supports http2 until then use without "http2"
     ## listen [::]:443 ssl http2; # TODO only enable after django supports http2 until then use without "http2"
     listen 443 ssl;
     listen [::]:443 ssl;

     ##### TODO Move to include and generate the include from ArcsSystem.config domains #####
     #ssl_certificate     /etc/letsencrypt/live/medborgarforskning.se/fullchain.pem; # /path/to/signed_cert_plus_intermediates for naked domain
     #ssl_certificate_key /etc/letsencrypt/live/medborgarforskning.se/privkey.pem; # /path/to/private_key for naked domain
     #ssl_certificate     /etc/letsencrypt/live/www.medborgarforskning.se/fullchain.pem; # /path/to/signed_cert_plus_intermediates for www subdomain
     #ssl_certificate_key /etc/letsencrypt/live/www.medborgarforskning.se/privkey.pem; # /path/to/private_key for www subdomain
     #ssl_certificate     /etc/letsencrypt/live/dev.medborgarforskning.se/fullchain.pem; # /path/to/signed_cert_plus_intermediates for dev subdomain
     #ssl_certificate_key /etc/letsencrypt/live/dev.medborgarforskning.se/privkey.pem; # /path/to/private_key for dev subdomain
     ##### END TODO Move to include #####

     ### BEGIN Dev-Test manual transitional certificates - TODO remove this block befor release ###
     ssl_password_file /etc/letsencrypt/test.pass;
     #ssl_certificate /etc/letsencrypt/live/dev.medborgarforskning.se/cert.pem; # /path/to/signed_cert_plus_intermediates for dev subdomain
     #ssl_certificate_key /etc/letsencrypt/live/dev.medborgarforskning.se/privkey.pem; # /path/to/private_key for dev subdomain
     ssl_certificate /etc/letsencrypt/live/arcstest.brierjon.com/cert.pem; # /path/to/signed_cert_plus_intermediates for alternative dev subdomain
     ssl_certificate_key /etc/letsencrypt/live/arcstest.brierjon.com/key.pem; # /path/to/private_key for alternative dev subdomain
     ### END Dev-Test manual transitional certificates

     ssl_session_timeout 1d;
     ssl_session_cache shared:MozSSL:10m;  # about 40000 sessions
     ssl_session_tickets off;

     ### modern configuration
     ssl_protocols TLSv1.2 TLSv1.3;
     ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
     ssl_prefer_server_ciphers on; # modern suggests off if you only use TLSv1.3

     ### HSTS (ngx_http_headers_module is required) (63072000 seconds is recommended for production)
     ## enable for inclusion of your domain in browsers to only use https - opt-in by enabling the preload version of the header below
     # add_header Strict-Transport-Security "max-age=63072000; includeSubDomains" always; preload;
     add_header Strict-Transport-Security "max-age=30; includeSubDomains" always;

     ### OCSP stapling
     # ssl_stapling on;
     # ssl_stapling_verify on;

     ### verify chain of trust of OCSP response using Root CA and Intermediate certs
     # ssl_trusted_certificate /path/to/root_CA_cert_plus_intermediates;

     ### replace with the IP address of your resolver ie the nameservers
     resolver 127.0.0.1;

     ### enable for letsencrypt wildcard deployment TODO DNS configuration needs to be implemented
     # include /etc/letsencrypt/options-ssl-nginx.conf; # TODO implement letsencrypt wildcard container
     ##### End SSL configuration #####

     ##### Begin application configuration #####
     ### set the valid host names that this server will handle (name1 name2 name3)
     ### Insert the naked domain name (ie. medborgarforskning.se), www subdomain (ie www.medborgarforskning.se), other subdomains. A wildcard is not supported with by ARCS automatic certificate generation at this time (ie *.medborgarforskning.se) due to DNS provider support being required and additional development needed. https://letsencrypt.org/docs/challenge-types/ # TODO verify all subdomains needed are listed.
     server_name arcstest.brierjon.com medborgarforskning.se www.medborgarforskning.se dev.medborgarforskning.se;


     charset utf-8;
     root /var/www/arcs_collected_static/; #sets the root of your files on the server

     ### max upload size
     client_max_body_size 75M;   # adjust to taste

     # deny scripts inside writable directories
     location ~* /(static|images|cache|media|logs|tmp)/.*.(php|pl|py|jsp|asp|sh|cgi)$ {
       return 403;
       error_page 403 /403_error.html;
     }

     ### prevent image hotlinking from 3rd parties # TODO reenable after domain names are used
     #location ~ .(webp|png|gif|jpe?g)$ {
       #valid_referers none blocked medborgarforskning.se dev.medborgarforskning.se arcstest.brierjon.com; # place valid domain name. Recommend one per line for readability.
       #if ($invalid_referer) {
       #  return   403;
       #  }
     #}

     ### set favicon location regardless if included in template
     location = /favicon.ico {
       alias /var/www/arcs_collected_static/static/favicon.ico;
       sendfile on;
       sendfile_max_chunk 1m;
     }

     ### set default robots.txt root location regardless if included in header response only handles primary domain not subdomains
     location = /robots.txt {
       alias /var/www/arcs_collected_static/static/robots.txt;
       sendfile on;
       sendfile_max_chunk 1m;
     }

     ### set the .well-known location for static files
     location = /.well-known {
       alias /var/www/arcs_collected_static/static/.well-known/;
       #sendfile on;
       #sendfile_max_chunk 1m;
     }

     ### set Nginx to handle the site design static files to offload from python app
     location /static/ { # scripts, images, etc for site design - working don't touch
       alias /var/www/arcs_collected_static/static/;
       sendfile on;
       sendfile_max_chunk 1m;
     }

     ### set Nginx to handle the user uploaded static files to offload from python app
     location /media/ { # host static files from user side
       alias /var/www/arcs_collected_static/media/;
       sendfile on;
       sendfile_max_chunk 1m;
     }

     ### Setting the cache lengths
     #location ~ \.(css)$ {
     #}

     location / {
       ### checks for static file, if not found proxy to app
       try_files $uri @proxy_to_app;
     }

     ### Reverse proxy the Django app requests
     location @proxy_to_app {
       proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
       proxy_set_header X-Forwarded-Proto $scheme;
       proxy_set_header X-Forwarded-Host $server_name;
       proxy_set_header X-Real-IP $remote_addr;
       proxy_set_header Host $http_host;

       ### we don't want nginx trying to do something clever with
       ### redirects, we set the Host: header above already.
       proxy_redirect off;
       proxy_pass http://django-server;
     }

     ##### BEGIN adding securityheaders #####
     ###  nosniff tells browsers to strictly process mime.types instead of guessing
     add_header X-Content-Type-Options "nosniff" always;

     ### Block pages from loading when they detect reflected XSS attacks
     add_header X-XSS-Protection "1; mode=block";

     ### Content Security Policy
     ### Reporting Only - TODO cleanup for modularity of domains and add as header in dev environment
     # add_header Content-Security-Policy-Report-Only "default-src 'self' testdev.brierjon.com medborgarforskning.se dev.medborgarforskning.se; script-src 'self' testdev.brierjon.com medborgarforskning.se dev.medborgarforskning.se; script-src-elem 'self' code.jquery.com cdn.jsdelivr.net stackpath.bootstrapcdn.com; script-src-attr 'none'; style-src 'self' testdev.brierjon.com medborgarforskning.se dev.medborgarforskning.se stackpath.bootstrapcdn.com; style-src-elem 'self' testdev.brierjon.com medborgarforskning.se dev.medborgarforskning.se stackpath.bootstrapcdn.com fonts.googleapis.com stackpath.bootstrapcdn.com; style-src-attr 'none'; img-src 'self' testdev.brierjon.com medborgarforskning.se dev.medborgarforskning.se; font-src 'self' testdev.brierjon.com medborgarforskning.se dev.medborgarforskning.se fonts.googleapis.com fonts.gstatic.com; connect-src 'none'; media-src 'none'; object-src 'none'; prefetch-src 'self' testdev.brierjon.com medborgarforskning.se dev.medborgarforskning.se; frame-src 'none'; worker-src 'none'; frame-ancestors 'none'; form-action 'self' testdev.brierjon.com medborgarforskning.se dev.medborgarforskning.se; block-all-mixed-content; sandbox; base-uri 'self' testdev.brierjon.com medborgarforskning.se dev.medborgarforskning.se; manifest-src 'self' testdev.brierjon.com medborgarforskning.se dev.medborgarforskning.se";
     ### Enforced Content Security Policy Values
     add_header Content-Security-Policy "upgrade-insecure-requests; default-src https testdev.brierjon.com medborgarforskning.se dev.medborgarforskning.se; script-src 'self' testdev.brierjon.com medborgarforskning.se dev.medborgarforskning.se stackpath.bootstrapcdn.com cdn.jsdelivr.net code.jquery.com; script-src-elem 'self' code.jquery.com cdn.jsdelivr.net stackpath.bootstrapcdn.com; style-src 'self' testdev.brierjon.com medborgarforskning.se dev.medborgarforskning.se stackpath.bootstrapcdn.com; img-src 'self' testdev.brierjon.com medborgarforskning.se dev.medborgarforskning.se; font-src 'self' testdev.brierjon.com medborgarforskning.se dev.medborgarforskning.se fonts.googleapis.com fonts.gstatic.com; style-src-elem 'self' testdev.brierjon.com medborgarforskning.se dev.medborgarforskning.se cdn.jsdelivr.net code.jquery.com fonts.googleapis.com stackpath.bootstrapcdn.com";

     ### Dev Default Behavior for referrals
     ## TODO adding for now at server level, but will move to application level for finer level of control per content
     add_header Referrer-Policy "no-referrer-when-downgrade";

     ### Dev Default Behavior for Feature Policy - restriction of objects still moving  #TODO move to application level for page specific control of access_log
     add_header Feature-Policy "geolocation 'self'; midi 'none'; notifications 'none'; sync-xhr 'none'; push 'none'; microphone 'none'; camera 'none'; magnetometer 'none'; gyroscope 'none'; speaker 'none'; vibrate 'none'; fullscreen 'none'; payment 'none';";

     ##### END adding securityheaders ######

     # TODO Faster Error Page delivery - consdier for offload from djangoapp
     #error_page 500 502 503 504 /500.html; # TODO create and add 500.html
     #location = /500.html {
     #}
  }
}
